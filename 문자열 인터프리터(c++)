#include <iostream>
using namespace std;

int main()
{
    int gop = 1, num
    int length;
    string d;
    cin >> d;

/*
    for (int i = 0; i < size(d); i++) {
        cout << atoi(&d[i]) << endl;    //sizeof의 경우 나중에 배열값을 바꾸는 경우가 발생하고, _msize는 동적할당같은 경우가 아니라서 사용할 수 없다. 그러나 크기를 알고싶으면
    }                                   //위처럼 size를 사용하면 된다. 표준인지 비표준인지는 알 수 없지만, 내 생각엔 비표준일 것 같다.
    */                      
    //숫자 문자열 atoi로 숫자로 바뀌게 하면, 예를 들어 d<111>이라고 입력했을 때, atoi 입장에선 3번째 배열이 1인지, 11인지, 111인지 알기 어렵다. 그래서, 111, 11, 1을 
    //다 다른 배열로 취급하고 출력한다. 따라서 나는 숫자문자형 배열 중 숫자만을 출력해보고 싶다면 위와 같이 출력할 수 있다.
    num = atoi(&d[2]);
    
    
    //여기서 나는 아래처럼 입력을 i(4)또는 d(4)이렇게 입력했을 때, 4*3*2*1을 입력 해 볼 수 있다.
    
    /*

using namespace std;

int main()
{
    int gop = 1;
    int length;
    string d;
    cin >> d;

    gop = atoi(&d[2]);

    //d<1> d<11> d<111>
    for (int k = 1; k < atoi(&d[2]); k++)
    {
        gop *= k;
    }
    cout << gop << endl;
}
*/
// 이번엔 문자열 인터프린터와 관계없이 위의 내용이 런타임에 의해 결정된다면, 이번엔 위와 비슷한 내용으로 곱할 때 값을 컴파일에 의해 결정되도록 만들어보겠다.(TMI)
/*
using namespace std;

void c(int n)
{
    int a[5] = { 1,2,3,4,5 };
    int b[3] = { 4,5,6 };
    for (int i = 0; i < 5; i++)
    {
        cout << "c(" << n << ") = " << a[i] * b[n-1] << endl;
    }
 
}
int main(void)
{
    int n;
    cin >> n;
    c(n);
}
//좀 많이 다른 것 같다. 대충 함수는 n을 입력하면, n이 1이면, a의 배열에 4를 곱하고, n이 2이면, a의 배열에 5를 곱하고...
//이런 느낌인데, 말했던 것처럼 컴파일에 의해 결정되는 모습을 보려면, c(상수)처리 해주면 되겠다.
//이렇게 하면 컴파일로 작업하면서 보기 편한데, 프로그램 사용자 입장에서 3입력하면, 그 값이 함수처리 되는 것도 좋겠지만, 그렇게 할 경우, 미리 그게 어떤 과정으로 함수가 처리되는지 알려주는
//방식이 있는데, 그렇게 하나하나 알려주자니, 코드 줄이 너무 길어서 비효율적이고, 사용자 입장에서도 1, 2 이렇게 치는 것보다 c(3)이게 훨씬 더 간편할 것이다.
//따라서 위와 같이 코드를 작성하게 되었으며, 다음에는 다른 언어로 위와 동일한 의미로 만들 수도 있고, 새로운 것을 만들어 볼 수도 있을 것 같다.
*/
